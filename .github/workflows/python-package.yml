name: Test Python Package

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  install:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }} üêç
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package üì¶
        run: |
          python setup.py install

  lint:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }} üêç
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies üì¶
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black radon
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with Black
        run: |
          black --target-version py310 --line-length 127 --diff --check .
      - name: Compute Maintainability Index
        run: |
            radon mi identifier_tools -i tests
      - name: Compute Cyclomatic Complexity
        run: |
            radon cc identifier_tools -a -i tests

  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }} üêç
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies üì¶
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=identifier_tools --cov-report=xml --cov-report=html --cov-report term